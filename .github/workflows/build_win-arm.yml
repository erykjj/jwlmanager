name: 'Build Windows ARM v1.1.1'

on:
  workflow_call:
    inputs:
      TAG:
        default: 'testing'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      TAG:
        default: 'testing'
        required: true
        type: string

jobs:
  winarm:
    name: Build Windows-arm EXE & ZIP
    runs-on: windows-latest
    permissions:
      contents: read
      actions: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade certifi==2025.4.26
        python -m pip install -r res/requirements-winarm.txt
        python -m pip install --upgrade certifi==2025.4.26
    - name: Build EXE with Pyinstaller
      run: |
        python -m pip install pyinstaller==5.13.2
        pyinstaller --noconfirm .github/workflows/JWLManager.exe.spec
        cd dist
        ren JWLManager.exe JWLManager_${{ inputs.TAG }}-arm.exe
    - name: Build with Pyinstaller
      run: |
        pyinstaller --clean --noconfirm .github/workflows/JWLManager.zip.spec
        cd dist
        tar.exe -a -c -f JWLManager_${{ inputs.TAG }}-arm.zip JWLManager
    - name: Upload EXE
      uses: actions/upload-artifact@v4
      with:
        name: WinarmEXE
        path: dist/JWLManager_${{ inputs.TAG }}-arm.exe
    - name: Upload ZIP
      uses: actions/upload-artifact@v4
      with:
        name: WinarmZIP
        path: dist/JWLManager_${{ inputs.TAG }}-arm.zip