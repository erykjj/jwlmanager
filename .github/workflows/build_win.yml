name: 'Build Windows v1.1.0'

on:
  workflow_call:
    inputs:
      TAG:
        default: 'testing'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      TAG:
        default: 'testing'
        required: true
        type: string

jobs:
  windows:
    name: Build Windows EXE & ZIP
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r res/requirements.txt
    # - name: Build EXE with Pyinstaller
    #   run: |
    #     python -m pip install pyinstaller==6.12.*
    #     pyinstaller --noconfirm .github/workflows/JWLManager.exe.spec
    #     cd dist
    #     ren JWLManager.exe JWLManager_${{ inputs.TAG }}.exe
    # - name: Build EXE with Nuitka
    #   run: |
    #     python -m pip install nuitka==2.6.5
    #     python -m nuitka --mode=onefile --windows-console-mode=disable --windows-icon-from-ico='res/icons/JWLManager.ico' --include-data-dir=res=res --include-module=xlsx2csv --include-package-data=puremagic --enable-plugin=pyside6 --msvc=latest --assume-yes-for-downloads JWLManager.py
    #     mkdir dist
    #     copy D:\a\jwlmanager\jwlmanager\JWLManager.exe dist\JWLManager_${{ inputs.TAG }}.exe
    # - name: Build with Pyinstaller
    #   run: |
    #     pyinstaller --clean --noconfirm .github/workflows/JWLManager.zip.spec
    #     cd dist
    #     tar.exe -a -c -f JWLManager_${{ inputs.TAG }}.zip JWLManager
    - name: Build with Nuitka
      run: |
        python -m pip install nuitka==2.6.5
        python -m nuitka --mode=standalone --windows-console-mode=disable --windows-icon-from-ico='res/icons/JWLManager.ico' --include-data-dir=res=res --include-module=xlsx2csv --include-package-data=puremagic --enable-plugin=pyside6 --msvc=latest --assume-yes-for-downloads JWLManager.py
        tar.exe -a -c -f dist/JWLManager_${{ inputs.TAG }}.zip D:\a\jwlmanager\jwlmanager\JWLManager.dist
    # - name: Upload EXE
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: WindowsEXE
    #     path: dist/JWLManager_${{ inputs.TAG }}.exe
    - name: Upload ZIP
      uses: actions/upload-artifact@v4
      with:
        name: WindowsZIP
        path: dist/JWLManager_${{ inputs.TAG }}.zip